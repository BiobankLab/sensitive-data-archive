{{- if .Values.global.networkPolicy.create }}
{{- if or (or (eq "all" .Values.global.deploymentType) (eq "external" .Values.global.deploymentType) ) (not .Values.global.deploymentType) }}
---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: {{ template "sda.fullname" . }}-download
  namespace: {{ .Release.Namespace }}
spec:
  podSelector:
    matchLabels:
      app: {{ template "sda.name" . }}-download
  policyTypes:
  - Ingress
  - Egress
  egress:
  - to:
    {{- if .Values.global.networkPolicy.databaseNamespace }}
    - namespaceSelector:
        matchLabels:
          name: {{ .Values.global.networkPolicy.databaseNamespace }}
    {{- end }}
    - podSelector:
        matchLabels:
          role: database
    ports:
    - protocol: TCP
      port: {{ .Values.global.db.port | default 5432 | int }}
  - to:
    {{- if .Values.global.networkPolicy.internalNamespace }}
    - namespaceSelector:
        matchLabels:
          name: {{ .Values.global.networkPolicy.internalNamespace }}
    {{- end }}
    - podSelector:
        matchLabels:
          role: reencrypt
    ports:
    - protocol: TCP
      port: {{ .Values.global.reencrypt.port | int }}
  {{- if .Values.global.networkPolicy.ingressNamespace }}
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: {{ .Values.global.networkPolicy.ingressNamespace }}
          podSelector:
            matchLabels:
              {{ .Values.global.networkPolicy.ingressLabelMatch | nindent 14 }}
        ports:
          - protocol: TCP
            port: 8080
          - protocol: TCP
            port: 8443
          - protocol: TCP
            port: 443
  {{- end }}
---
{{- end }}
{{- end }}