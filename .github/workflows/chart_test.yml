name: Chart deployment test

on:
  pull_request:
    paths:
      - "charts/**"

env:
  DOCKER_BUILDKIT: 1

jobs:
  deploy:
    name: deployment test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ["1.26", "1.27"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Helm
        uses: azure/setup-helm@v3.5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Initialise k3d
        run: bash .github/integration/scripts/charts/k3d.sh ${{matrix.version}}
        shell: bash

      - name: debug
        if: failure()
        run: k3d version list k3s | grep ${{matrix.version}}
        shell: bash

      - name: build postgres
        shell: bash
        run: |
          cd postgresql
          docker build -t ghcr.io/${{ github.repository }}:test-postgres .
      - name: build rabbitmq
        shell: bash
        run: |
          cd rabbitmq
          docker build -t ghcr.io/${{ github.repository }}:test-rabbitmq .
      - name: build sda
        shell: bash
        run: |
          cd sda
          docker build -t ghcr.io/${{ github.repository }}:test .
      - name: build sda-auth
        shell: bash
        run: |
          cd sda-auth
          docker build -t ghcr.io/${{ github.repository }}:test-auth .
      - name: build sda-download
        shell: bash
        run: |
          cd sda-download
          docker build -t ghcr.io/${{ github.repository }}:test-download .
      - name: build sda-pipeline
        shell: bash
        run: |
          cd sda-pipeline
          docker build -t ghcr.io/${{ github.repository }}:test-pipeline .
      - name: Import images to cluster
        run: k3d image import ghcr.io/${{ github.repository }}:test-postgres  ghcr.io/${{ github.repository }}:test-rabbitmq  ghcr.io/${{ github.repository }}:test  ghcr.io/${{ github.repository }}:test-auth  ghcr.io/${{ github.repository }}:test-download  ghcr.io/${{ github.repository }}:test-pipeline -c sda

      - name: Deploy external services
        run: bash .github/integration/scripts/charts/dependencies.sh
        shell: bash

      - name: Deploy DB
        run: bash .github/integration/scripts/charts/deploy_charts.sh sda-db

      - name: Deploy MQ
        run: bash .github/integration/scripts/charts/deploy_charts.sh sda-mq
        shell: bash

      - name: Deploy pipeline
        run: bash .github/integration/scripts/charts/deploy_charts.sh sda-svc
        shell: bash

      - name: test
        if: always()
        run: |
          kubectl get secret broker-sda-mq -o json
          kubectl get secret pipeline-sda-svc-mapper -o json
          kubectl get pods
          echo "describe mapper" && kubectl describe pod -l role=mapper
          sleep 1
          echo "logs mapper" && kubectl logs -l role=mapper
          sleep 1
          echo "describe broker" && kubectl logs -l role=broker
        shell: bash